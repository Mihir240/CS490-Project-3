# This is a basic workflow to help you get started with Actions

name: Python Server CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the ci-demo branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    
    env:
     DATABASE_URL: postgres://yevarrsrkrritu:10c0ec3a5e678708ab5970f137064f01c64b901d45601ffe5e3c5aca7940ed1f@ec2-34-206-8-52.compute-1.amazonaws.com:5432/d2bcvin3mvjuno

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint app.py
        run: pylint app.py

      - name: Lint db_api.py
        run: pylint db_api.py

      - name: Lint models.py
        run: pylint models.py
      
      - name: Lint charts.py
        run: pylint charts.py

      # Run Unmocked tests
      - name: Run Unmocked Tests
        run: python unmocked_unit_test.py

      # Run Mocked tests
      - name: Run Mocked Tests
        run: python mocked_unit_test.py
        
       
        
        
